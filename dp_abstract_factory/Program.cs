namespace AbstractFactoryClass;

class Program
{
    
    static void Main(string[] args)
    {
        // Легковая_машина легковая_машина_1 = new Легковая_машина("Седан", "Максим");
        // Грузовая_машина грузовая_машина_1 = new Грузовая_машина("Холодильник", "Леха", ""); // МЫ НЕ ДОСТАВЛЯЕМ
        // // Грузовая_машина грузовая_машина_2 = new Грузовая_машина("Холодильник", "Леха", "Трапоповка"); // МЫ ДОСТАВЛЯЕМ
        // легковая_машина_1.Показать_характеристики_транспорт();
        // легковая_машина_1.Починить_транспорт();
        // легковая_машина_1.Проверка_топлива_транспорт();
        // легковая_машина_1.Подвезти_прохожего("Валера");
        // легковая_машина_1.Посмотреть_водителя();
        //
        // грузовая_машина_1.Показать_характеристики_транспорт();
        // грузовая_машина_1.Починить_транспорт();
        // грузовая_машина_1.Проверка_топлива_транспорт();
        // грузовая_машина_1.Доехать_до_пункта("Трапоповка");
        // грузовая_машина_1.Посмотреть_водителя();
        //
        
        
        // грузовая_машина_2.Показать_характеристики_транспорт();
        // грузовая_машина_2.Починить_транспорт();
        // грузовая_машина_2.Проверка_топлива_транспорт();
        // грузовая_машина_2.Доехать_до_пункта("Трапоповка");
        // грузовая_машина_2.Доставить_груз("Охлажденка");
        // грузовая_машина_2.Посмотреть_водителя();
        
        Console.WriteLine("Введите ваше имя:");
        string ваше_имя = Console.ReadLine();
        Console.WriteLine("Выберите услугу:");
        Console.WriteLine("1. Такси");
        Console.WriteLine("2. Перевозга груза");
        
        string выбор = Console.ReadLine();
        string тип_машины = "Седан";
        string точка_доставки = "";
        string название_груза = "Заказчик";

        Создание_разного создание_разного = null;

        switch (выбор)
        {
            case "1":
                Console.WriteLine("Введите тип машины:");
                Console.WriteLine("(Седан, Хэтчбек, Джимикс, Розовый Фламинго)");
                тип_машины = Console.ReadLine();
                создание_разного = new Создание_легкового_автомобиля(тип_машины);
                break;
            case "2":
                Console.WriteLine("Введите тип грузовой машины:");
                Console.WriteLine("(Холодильник, Объемный, Стекло)");
                тип_машины = Console.ReadLine();
                Console.WriteLine("Введите точку доставки грузовой машины:");
                Console.WriteLine("(не вводите ничего, если едем на склад)");
                точка_доставки = Console.ReadLine();
                Console.WriteLine("Какой груз хотите доставить?");
                название_груза = Console.ReadLine();
                создание_разного = new Создание_грузовая_автомобиля(тип_машины, точка_доставки);
                break;
        }
        
        // Console.WriteLine("ТЕСТ");
        // создание_разного.Просмотреть_транспорт();
        // Console.WriteLine("ВНИМАНИЕ: ДАЛЬШЕ ИДЕТ КОНКРЕТНЫЙ ВЫЗОВ");
        // Console.WriteLine();
        // if (создание_разного is Легковая_машина)
        // {
        //     создание_разного
        // }
        //
        // Создание_разного создать_легковой = new Создание_легкового_автомобиля("Седан", "Максим");
        ITransport_common вызванная_машина = создание_разного.Создать_транспорт();
        // IDriver водитель = создание_разного.Создать_водителя();

        if (вызванная_машина is Легковая_машина легковая_машина)
        {
            легковая_машина.Подвезти_прохожего(ваше_имя);
            легковая_машина.Водитель_тип_транспорт();
            легковая_машина.Показать_характеристики_транспорт();
            легковая_машина.Проверка_топлива_транспорт();
            легковая_машина.Починить_транспорт();
            легковая_машина.Посмотреть_водителя();
        }
        else if (вызванная_машина is Грузовая_машина грузовая_машина)
        {
            грузовая_машина.Доехать_до_пункта(точка_доставки);
            грузовая_машина.Доставить_груз(название_груза, точка_доставки);
            грузовая_машина.Водитель_тип_транспорт();
            грузовая_машина.Показать_характеристики_транспорт();
            грузовая_машина.Проверка_топлива_транспорт();
            грузовая_машина.Починить_транспорт();
            грузовая_машина.Посмотреть_водителя();
        }
        
        
    }
}

public abstract class Создание_разного
{
    public abstract ITransport_common Создать_транспорт();
    public abstract IDriver Создать_водителя();

    public void Просмотреть_транспорт()
    {
        ITransport_common транспорт = Создать_транспорт();
        транспорт.Показать_характеристики_транспорт();
        транспорт.Проверка_топлива_транспорт();
        транспорт.Водитель_тип_транспорт();
    } 
    
}


public class Создание_легкового_автомобиля : Создание_разного
{
    string тип_машины = "";
    // string имя_водителя = "";

    public Создание_легкового_автомобиля(string тип_машины)
    {
        this.тип_машины = тип_машины;
        // this.имя_водителя = имя_водителя;
    }
    public override ITransport_common Создать_транспорт()
    {
        IDriver водитель = Создать_водителя();
        return new Легковая_машина(тип_машины, водитель);
    }
    
    public override IDriver Создать_водителя()
    {
        return new Ярик_водила();
    }
}


public class Создание_грузовая_автомобиля : Создание_разного
{
    string точка_доставки = "";
    string тип_грузовика = "";
    // string имя_водителя = "";
    
    public Создание_грузовая_автомобиля(string тип_грузовика, string? точка_доставки)
    {
        this.тип_грузовика = тип_грузовика;
        // this.имя_водителя = имя_водителя;
        this.точка_доставки = точка_доставки;
    }
    
    public override ITransport_common Создать_транспорт()
    {
        IDriver водитель = Создать_водителя();
        return new Грузовая_машина(тип_грузовика,водитель,точка_доставки);
    }
    
    public override IDriver Создать_водителя()
    {
        return new Ярик_водила();
    }
}



class Легковая_машина : ITransport_common
{
    string тип_машины = "";
    IDriver водитель;
    string имя_прохожего = "";

    public Легковая_машина(string тип_машины, IDriver водитель)
    {
        this.тип_машины = тип_машины;
        this.водитель = водитель;
    }

    public void Водитель_тип_транспорт()
    {
        Console.WriteLine($"Для машины {тип_машины} текущий водитель - ");
        водитель.фио_водитель();
    }
    
    public void Проверка_топлива_транспорт()
    {
        Console.WriteLine($"Топливо на уровне {Random .Shared.Next(0, 101)}%");
    }

    public void Починить_транспорт()
    {
        Console.WriteLine($"Вы подлатали транспорт!");
    }

    public void Показать_характеристики_транспорт()
    {
        Console.WriteLine($"---------------------{тип_машины}--------------------------");
        Console.WriteLine($"Скорость: {Random .Shared.Next(0, 101)} ед.");
        Console.WriteLine($"Прочность: {Random .Shared.Next(0, 101)} ед.");
        Console.WriteLine($"Места: {Random .Shared.Next(2, 6)} ед.");
        Console.WriteLine($"Грузоподъемность: {Random .Shared.Next(150, 10000)} ед.");
        Console.WriteLine("Водитель: ");
        водитель.фио_водитель();
        Console.WriteLine("-----------------------------------------------");
    }

    public void Подвезти_прохожего(string имя_прохожего)
    {
        Console.WriteLine($"Вы подвезли прохожего {имя_прохожего}!");
    }
    
    public void Посмотреть_водителя()
    {
        Console.WriteLine($"Текущий водитель - ");
        водитель.фио_водитель();
    }
}

class Грузовая_машина : ITransport_common
{
    string точка_доставки = "";
    string тип_грузовика = "";
    IDriver водитель;
    string название_груза = "";

    public Грузовая_машина(string тип_грузовика, IDriver водитель, string? точка_доставки)
    {
        this.тип_грузовика = тип_грузовика;
        this.водитель = водитель;
        this.точка_доставки = точка_доставки;
    }
    
    public void Водитель_тип_транспорт()
    {
        Console.WriteLine($"Для грузовика {тип_грузовика} текущий водитель - ");
        водитель.фио_водитель();
    }
    
    public void Проверка_топлива_транспорт()
    {
        Console.WriteLine($"Топливо на уровне {Random .Shared.Next(0, 101)}%");
    }

    public void Починить_транспорт()
    {
        Console.WriteLine($"Вы подлатали транспорт!");
    }

    public void Показать_характеристики_транспорт()
    {
        Console.WriteLine($"---------------------{тип_грузовика}--------------------------");
        Console.WriteLine($"Скорость: {Random .Shared.Next(0, 101)} ед.");
        Console.WriteLine($"Прочность: {Random .Shared.Next(0, 101)} ед.");
        Console.WriteLine($"Места: {Random .Shared.Next(2, 6)} ед.");
        Console.WriteLine($"Грузоподъемность: {Random .Shared.Next(150, 10000)} ед.");
        Console.WriteLine("Водитель: ");
        водитель.фио_водитель();
        Console.WriteLine("-----------------------------------------------");
    }
    
    public void Доехать_до_пункта(string? точка_доставки)
    {
        if (точка_доставки == "")
        {
            Console.WriteLine($"Вы доехали до склада!");
        }
        else
        {
            Console.WriteLine($"Вы доехали до пункта {точка_доставки}!");
        }
        
    }

    public void Доставить_груз(string название_груза, string? точка_доставки)
    {
        if (точка_доставки == "")
        {
            Console.WriteLine($"Доставили груз {название_груза} на склад!");
        }
        else
        {
            Console.WriteLine($"Доставили груз {название_груза} в пункт {точка_доставки}!");
        }
        
    }
    
    public void Посмотреть_водителя()
    {
        Console.WriteLine($"Текущий водитель - ");
        водитель.фио_водитель();
    }
}

public class Ярик_водила : IDriver
{
    List<string> Массив_Лех = new List<string>()
    {
        "Петров Алексей Иванович",
        "Смирнов Алексей Сергеевич",
        "Козлов Алексей Владимирович",
        "Соколов Алексей Николаевич",
        "Морозов Алексей Дмитриевич",
        "Васильев Алексей Павлович",
        "Попов Алексей Александрович",
        "Кузнецов Алексей Михайлович",
        "Федоров Алексей Юрьевич",
        "Григорьев Алексей Андреевич"
    };
    private string фио;
    private Random рандом = new Random();
    
    public Ярик_водила()
    {
        фио = Массив_Лех[рандом.Next(Массив_Лех.Count)];;
    }
    public void фио_водитель()
    {
        // фио = Массив_Лех[рандом.Next(Массив_Лех.Count)];
        Console.WriteLine(фио);
    }

    public void Показать_характеристики_водитель()
    {
        throw new NotImplementedException();
    }
}