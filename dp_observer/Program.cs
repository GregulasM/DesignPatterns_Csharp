namespace DesignPatterns_Csharp;

// ------ Паттерн Observer ------ //
//
// Мега крутой паттерн, которым нужно овладеть и все осознать.
// Имеется «IChat_observer» для метода обновления, в которое вставляется новое сообщение для пользователя.
// Имеется класс онлайн чата «Чат_онлайн», в котором реализован список участников параметром «<IChat_observer>», дабы у каждого пользователя в списке можно было вызывать метод обновления.
// Методы «Чат_онлайн» на подписку «Подписка» и отписку «Отписка» пользователя (добавляет в коллекцию). «Отправить_сообщение» с сообщением вызывает метод «Уведомление», внутри него для каждого участника вызываем обновление с сообщением (◔_◔)
// «Чат_клиент» позволяет создать пользователя, вызвать его имя и вывести новое сообщение через «Обновление».
// Супер комплексно все, простор огромный.
//
// ------------------------------ //

class Program
{
    static void Main(string[] args)
    {
        Чат_клиент клиент1 = new Чат_клиент("Валера");
        Чат_клиент клиент2 = new Чат_клиент("Вадим");
        Чат_клиент клиент3 = new Чат_клиент("Рома");

        Чат_онлайн чат_онлайн = new Чат_онлайн();
        чат_онлайн.Подписка(клиент1);
        чат_онлайн.Подписка(клиент2);
        чат_онлайн.Подписка(клиент3);

        Console.WriteLine();
        Console.WriteLine($"{клиент1.Имя} написал сообщение: \"Круглый стол\"");
        Console.WriteLine();
        
        чат_онлайн.Отправить_сообщение($"{клиент1.Имя}: Круглый стол");
        
        
        чат_онлайн.Отписка(клиент2);
        
        Console.WriteLine();
        Console.WriteLine($"{клиент3.Имя} написал сообщение: \"Лол\"");
        Console.WriteLine();
        
        чат_онлайн.Отправить_сообщение($"{клиент3.Имя}: Лол");

    }
}


class Чат_онлайн
{
    List<IChat_observer> _смотритель_подписчиков_лист = new List<IChat_observer>();

    public void Подписка(IChat_observer наблюдатель)
    {
        _смотритель_подписчиков_лист.Add(наблюдатель);
    }

    public void Отписка(IChat_observer наблюдатель)
    {
        _смотритель_подписчиков_лист.Remove(наблюдатель);
    }

    public void Отправить_сообщение(string сообщение)
    {
        Уведомление(сообщение);
    }

    public void Уведомление(string сообщение)
    {
        foreach (var пользователь in _смотритель_подписчиков_лист)
        {
            пользователь.Обновление(сообщение);
        }
    }

}

class Чат_клиент : IChat_observer
{
    private string _имя_пользователя;

    public string Имя
    {
        get
        {
            return _имя_пользователя;
        }
    }

    public Чат_клиент(string имя_пользователя)
    {
        _имя_пользователя = имя_пользователя;
    }
    
    public void Обновление(string сообщение)
    {
        Console.WriteLine("------ Новое сообщение ------");
        Console.WriteLine($"{_имя_пользователя} - \n{сообщение}");
        Console.WriteLine("------------------------------");
    }
}